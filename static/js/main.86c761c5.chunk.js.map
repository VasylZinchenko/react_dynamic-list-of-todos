{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodoId","className","map","id","title","completed","classNames","type","onClick","TodoFilter","filterBy","setFilterBy","query","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","todoId","setTodoId","useState","user","setUser","isModalCardOpen","setIsModalCardOpen","selectedTodo","find","loadUsers","a","userId","usersFromServer","useEffect","href","email","name","App","setTodos","isLoaded","setIsLoaded","loadTodos","todosFromServer","filteredTodos","filter","content","toLowerCase","includes","checkQuery","todosId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86c761c5.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (id: number) => void;\n  selectedTodoId: number\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(({ id, title, completed }) => (\n          <tr\n            data-cy=\"todo\"\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                'has-text-success',\n                {\n                  'has-text-danger': !completed,\n                },\n              )}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {selectedTodoId === id\n                ? (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button is-link\"\n                    type=\"button\"\n                    onClick={() => {\n                      selectTodo(0);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye-slash\" />\n                    </span>\n                  </button>\n                ) : (\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      selectTodo(id);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  filterBy: string,\n  setFilterBy: (value: string) => void;\n  query: string;\n  setQuery: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterBy,\n  setFilterBy,\n  query,\n  setQuery,\n}) => {\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterBy(event.target.value);\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleReset = () => setQuery('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={handleSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span\n          className=\"icon is-right\"\n          style={{ pointerEvents: 'all' }}\n        >\n          {query && (\n            <>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={handleReset}\n              />\n            </>\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todoId: number;\n  todos: Todo[];\n  setTodoId: (id: number) => number | void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todoId,\n  todos,\n  setTodoId,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isModalCardOpen, setIsModalCardOpen] = useState(true);\n  const selectedTodo = todos.find(({ id }) => id === todoId);\n\n  const loadUsers = async () => {\n    if (selectedTodo) {\n      const usersFromServer = await getUser(selectedTodo.userId);\n\n      setUser(usersFromServer);\n    }\n  };\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  if (!isModalCardOpen) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setIsModalCardOpen(false);\n                setTodoId(0);\n              }}\n            />\n\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={classNames(\n                'has-text-success',\n                {\n                  'has-text-danger': !selectedTodo?.completed,\n                },\n              )}\n              >\n                {\n                  selectedTodo?.completed\n                    ? 'Done'\n                    : 'Planned'\n                }\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport function checkQuery(query:string, content:string) {\n  return (content.toLowerCase())\n    .includes(query.toLowerCase());\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState(0);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [filterBy, setFilterBy] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const loadTodos = async () => {\n    const todosFromServer = await getTodos();\n\n    setIsLoaded(true);\n    setTodos(todosFromServer);\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const filteredTodos = todos\n    .filter(({ completed }) => {\n      switch (filterBy) {\n        case 'active':\n          return !completed;\n\n        case 'completed':\n          return completed;\n\n        default:\n          return true;\n      }\n    })\n    .filter(({ title }) => {\n      return checkQuery(query, title);\n    });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterBy={filterBy}\n                setFilterBy={setFilterBy}\n                query={query}\n                setQuery={setQuery}\n\n              />\n            </div>\n            <div className=\"block\">\n              {\n                !isLoaded\n                  ? <Loader />\n                  : (\n                    <TodoList\n                      todos={filteredTodos}\n                      selectedTodoId={todoId}\n                      selectTodo={(todosId) => {\n                        setTodoId(todosId);\n                      }}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoId !== 0 && (\n        <TodoModal\n          todoId={todoId}\n          todos={filteredTodos}\n          setTodoId={setTodoId}\n        />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}